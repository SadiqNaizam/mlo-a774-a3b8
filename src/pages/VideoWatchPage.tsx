import React, { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';

// Custom Layout Components
import Header from '@/components/layout/Header';
import Sidebar from '@/components/layout/Sidebar';
import Footer from '@/components/layout/Footer';

// Custom Page-Specific Components
import VideoPlayer from '@/components/VideoPlayer';
import CommentThread from '@/components/CommentThread';
import VideoThumbnailItem from '@/components/VideoThumbnailItem';

// Shadcn/ui Components
import { ScrollArea } from '@/components/ui/scroll-area';
import { Card, CardHeader, CardContent } from '@/components/ui/card';
import { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar';
import { Button } from '@/components/ui/button';
import { Accordion, AccordionItem, AccordionTrigger, AccordionContent } from '@/components/ui/accordion';
import { Badge } from '@/components/ui/badge';

// Lucide Icons
import { ThumbsUp, ThumbsDown, Share2, Bookmark, UserPlus } from 'lucide-react';
import { cn } from '@/lib/utils';

// Placeholder data for the video being watched
const currentVideo = {\n  id: 'vid001',\n  title: 'Epic Montage: A Decade of Gaming Highlights',\n  sources: [\n    { src: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4', type: 'video/mp4', quality: '720p' },\n    { src: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4', type: 'video/mp4', quality: '480p' },\n  ],\n  poster: 'https://i.ytimg.com/vi/aqz-KE-bpKQ/maxresdefault.jpg',\n  views: '2.1M',\n  uploadDate: 'Jun 10, 2024',\n  likes: '150K',\n  channel: {\n    id: 'channel_gamerx', // Used for constructing link if needed, App.tsx has /channel\n    name: 'GamerXtreme',\n    avatarUrl: 'https://ui.shadcn.com/avatars/05.png',\n    subscribers: '1.2M',\n  },\n  description: `Relive the most iconic moments from the past ten years of gaming! This montage features breathtaking clips, hilarious fails, and legendary plays from a variety of titles.\n  \nTimestamps:\n0:00 - Intro\n0:45 - Legendary FPS Moments\n5:20 - RPG Boss Battles\n10:15 - Indie Game Gems\n15:00 - Outro & Special Thanks\n  \nFollow me on social media!\nTwitter: @GamerXtreme\nInstagram: @GamerXtremeOfficial\n  \nThanks for watching! Don't forget to like, subscribe, and hit the bell icon!\n#Gaming #Montage #Highlights`,\n  tags: ['Gaming', 'Montage', 'Highlights', 'Esports']\n};\n\n// Placeholder data for related videos
const relatedVideosData = [\n  { videoId: 'rel001', thumbnailUrl: 'https://i.ytimg.com/vi/S4W6k_b0c3g/hqdefault.jpg', title: 'Top 10 Plays of the Week - Episode 52', channelName: 'GamingWeekly', viewCount: '500K views', uploadDate: '3 days ago', videoDuration: '10:05', channelAvatarUrl: 'https://ui.shadcn.com/avatars/02.png' },\n  { videoId: 'rel002', thumbnailUrl: 'https://i.ytimg.com/vi/3JZ_D3ELwOQ/hqdefault.jpg', title: 'My Setup Tour 2024 - Pro Gamer Gear', channelName: 'TechSource', viewCount: '1.2M views', uploadDate: '1 week ago', videoDuration: '15:22', channelAvatarUrl: 'https://ui.shadcn.com/avatars/03.png' },\n  { videoId: 'rel003', thumbnailUrl: 'https://i.ytimg.com/vi/7_n08Y3uYSA/hqdefault.jpg', title: 'Let\\'s Play: New Open World RPG Part 1', channelName: 'AdventureLogs', viewCount: '80K views', uploadDate: '1 day ago', videoDuration: '45:10', channelAvatarUrl: 'https://ui.shadcn.com/avatars/04.png' },\n  { videoId: 'rel004', thumbnailUrl: 'https://i.ytimg.com/vi/Ptb6T90p_Bo/hqdefault.jpg', title: 'Speedrunning Tips for Beginners', channelName: 'QuickRunner', viewCount: '220K views', uploadDate: '5 days ago', videoDuration: '8:40' },\n];\n\nconst VideoWatchPage = () => {\n  const [isSidebarCollapsed, setIsSidebarCollapsed] = useState(false);\n\n  useEffect(() => {\n    console.log('VideoWatchPage loaded');\n    // In a real application, you would fetch video data based on video ID from the URL.\n    // For example, using `useLocation` from `react-router-dom` to get query params:\n    // const location = useLocation();\n    // const queryParams = new URLSearchParams(location.search);\n    // const videoId = queryParams.get('v');\n    // if (videoId) { /* fetch video data */ }\n  }, []);\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-background text-foreground\">\n      <Header />\n      <div className=\"flex flex-1\">\n        <Sidebar isCollapsed={isSidebarCollapsed} onToggleCollapse={() => setIsSidebarCollapsed(!isSidebarCollapsed)} />\n        <ScrollArea className={cn(\n          \"flex-1 pt-16 transition-all duration-300 ease-in-out\",\n          isSidebarCollapsed ? \"md:pl-20\" : \"md:pl-64\"\n        )}> {/* pt-16 for fixed Header */}\n          <main className=\"container mx-auto py-6 px-4\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-6\">\n              {/* Main Video Content Area */}\n              <div className=\"lg:col-span-8 xl:col-span-9 space-y-6\">\n                <section aria-labelledby=\"video-player-section\" className=\"aspect-video bg-muted rounded-lg overflow-hidden\">\n                  <h2 id=\"video-player-section\" className=\"sr-only\">Video Player</h2>\n                  <VideoPlayer\n                    sources={currentVideo.sources}\n                    poster={currentVideo.poster}\n                    title={currentVideo.title}\n                    autoplay={false} // Set to true if autoplay is desired\n                  />\n                </section>\n\n                <section aria-labelledby=\"video-details-section\">\n                  <Card>\n                    <CardHeader>\n                      <h1 id=\"video-details-section\" className=\"text-xl sm:text-2xl font-bold leading-tight\">\n                        {currentVideo.title}\n                      </h1>\n                      <div className=\"flex flex-wrap items-center text-sm text-muted-foreground mt-2 gap-x-2\">\n                        <span>{currentVideo.views} views</span>\n                        <span>&bull;</span>\n                        <span>Uploaded {currentVideo.uploadDate}</span>\n                        <Badge variant=\"secondary\" className=\"ml-auto hidden sm:inline-flex\">HD</Badge>\n                      </div>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between py-3 border-t border-b\">\n                        <div className=\"flex items-center space-x-3 mb-3 sm:mb-0\">\n                          <Link to=\"/channel\" aria-label={`View ${currentVideo.channel.name}'s channel`}> {/* Path from App.tsx */}\n                            <Avatar className=\"h-10 w-10 sm:h-12 sm:w-12\">\n                              <AvatarImage src={currentVideo.channel.avatarUrl} alt={currentVideo.channel.name} />\n                              <AvatarFallback>{currentVideo.channel.name.charAt(0).toUpperCase()}</AvatarFallback>\n                            </Avatar>\n                          </Link>\n                          <div>\n                            <Link to=\"/channel\" className=\"font-semibold hover:underline text-base\"> {/* Path from App.tsx */}\n                              {currentVideo.channel.name}\n                            </Link>\n                            <p className=\"text-xs text-muted-foreground\">{currentVideo.channel.subscribers} subscribers</p>\n                          </div>\n                        </div>\n                        <Button variant=\"default\" className=\"bg-red-600 hover:bg-red-700 text-white w-full sm:w-auto\">\n                          <UserPlus className=\"mr-2 h-4 w-4\" /> Subscribe\n                        </Button>\n                      </div>\n                      <div className=\"flex flex-wrap items-center gap-1 sm:gap-2 mt-3\">\n                        <Button variant=\"ghost\" size=\"sm\" className=\"flex-grow sm:flex-grow-0\">\n                          <ThumbsUp className=\"mr-1.5 h-5 w-5\" /> {currentVideo.likes}\n                        </Button>\n                        <Button variant=\"ghost\" size=\"sm\" className=\"flex-grow sm:flex-grow-0\">\n                          <ThumbsDown className=\"mr-1.5 h-5 w-5\" />\n                        </Button>\n                        <Button variant=\"ghost\" size=\"sm\" className=\"flex-grow sm:flex-grow-0\">\n                          <Share2 className=\"mr-1.5 h-5 w-5\" /> Share\n                        </Button>\n                        <Button variant=\"ghost\" size=\"sm\" className=\"flex-grow sm:flex-grow-0\">\n                          <Bookmark className=\"mr-1.5 h-5 w-5\" /> Save\n                        </Button>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </section>\n\n                <section aria-labelledby=\"video-description-section\">\n                  <Accordion type=\"single\" collapsible className=\"w-full bg-card p-4 rounded-lg border\" defaultValue=\"description\">\n                    <AccordionItem value=\"description\" className=\"border-none\">\n                      <AccordionTrigger className=\"text-base font-semibold hover:no-underline py-2\">\n                        Video Description\n                      </AccordionTrigger>\n                      <AccordionContent className=\"text-sm text-muted-foreground whitespace-pre-wrap pt-2 pb-0\">\n                        {currentVideo.description}\n                        {currentVideo.tags && currentVideo.tags.length > 0 && (\n                           <div className=\"mt-4\">\n                             <p className=\"font-medium text-card-foreground mb-1\">Tags:</p>\n                             <div className=\"flex flex-wrap gap-2\">\n                               {currentVideo.tags.map(tag => <Badge key={tag} variant=\"secondary\">{tag}</Badge>)}\n                             </div>\n                           </div>\n                        )}\n                      </AccordionContent>\n                    </AccordionItem>\n                  </Accordion>\n                </section>\n\n                <section aria-labelledby=\"video-comments-section\">\n                  <h2 id=\"video-comments-section\" className=\"sr-only\">Comments</h2>\n                  <CommentThread />\n                </section>\n              </div>\n\n              {/* Related Videos Sidebar */}\n              <aside className=\"lg:col-span-4 xl:col-span-3 space-y-4 lg:pt-0\"> {/* No pt needed as grid handles alignment */}\n                <h3 className=\"text-lg font-semibold\">Related Videos</h3>\n                {relatedVideosData.map(video => (\n                  <VideoThumbnailItem\n                    key={video.videoId}\n                    videoId={video.videoId}\n                    thumbnailUrl={video.thumbnailUrl}\n                    videoDuration={video.videoDuration}\n                    title={video.title}\n                    channelName={video.channelName}\n                    channelAvatarUrl={video.channelAvatarUrl}\n                    viewCount={video.viewCount}\n                    uploadDate={video.uploadDate}\n                  />\n                ))}\n              </aside>\n            </div>\n          </main>\n          <Footer />\n        </ScrollArea>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoWatchPage;